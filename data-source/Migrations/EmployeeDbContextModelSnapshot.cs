// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data_source.Models;

namespace data_source.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("data_source.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Option1");

                    b.Property<string>("Option2");

                    b.Property<string>("Option3");

                    b.Property<string>("Option4");

                    b.Property<string>("Option5");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("web_spaceways.Models.CelestialObject", b =>
                {
                    b.Property<int>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atmosphere");

                    b.Property<string>("Culture");

                    b.Property<string>("Distance");

                    b.Property<string>("Facts");

                    b.Property<string>("Formation");

                    b.Property<string>("Name");

                    b.Property<string>("Observations");

                    b.Property<string>("Orbit");

                    b.Property<string>("Rotation");

                    b.Property<string>("Size");

                    b.Property<double>("Temperature");

                    b.Property<string>("Type");

                    b.HasKey("ObjectId");

                    b.ToTable("CelestialObjects");
                });

            modelBuilder.Entity("web_spaceways.Models.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Interest");

                    b.Property<int?>("RiskId");

                    b.Property<string>("Type");

                    b.HasKey("ProfileId");

                    b.HasIndex("RiskId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("web_spaceways.Models.Risk", b =>
                {
                    b.Property<int>("RiskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeRisk");

                    b.HasKey("RiskId");

                    b.ToTable("Risks");
                });

            modelBuilder.Entity("web_spaceways.Models.Script", b =>
                {
                    b.Property<int>("ScriptId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Observation");

                    b.Property<int?>("ProfileId");

                    b.HasKey("ScriptId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("web_spaceways.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<DateTime>("ExitDate");

                    b.Property<int?>("ScriptId");

                    b.HasKey("TripId");

                    b.HasIndex("ScriptId");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("web_spaceways.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Name");

                    b.Property<int?>("ProfileId");

                    b.HasKey("UserId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("web_spaceways.Models.VisitedPlace", b =>
                {
                    b.Property<int>("VisitedPlaceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CelestialObjectObjectId");

                    b.Property<int?>("ScriptId");

                    b.HasKey("VisitedPlaceId");

                    b.HasIndex("CelestialObjectObjectId");

                    b.HasIndex("ScriptId");

                    b.ToTable("VisitedPlaces");
                });

            modelBuilder.Entity("web_spaceways.Models.Profile", b =>
                {
                    b.HasOne("web_spaceways.Models.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId");
                });

            modelBuilder.Entity("web_spaceways.Models.Script", b =>
                {
                    b.HasOne("web_spaceways.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("web_spaceways.Models.Trip", b =>
                {
                    b.HasOne("web_spaceways.Models.Script", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId");
                });

            modelBuilder.Entity("web_spaceways.Models.User", b =>
                {
                    b.HasOne("web_spaceways.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("web_spaceways.Models.VisitedPlace", b =>
                {
                    b.HasOne("web_spaceways.Models.CelestialObject", "CelestialObject")
                        .WithMany()
                        .HasForeignKey("CelestialObjectObjectId");

                    b.HasOne("web_spaceways.Models.Script", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId");
                });
#pragma warning restore 612, 618
        }
    }
}
